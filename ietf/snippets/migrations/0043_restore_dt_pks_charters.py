# -*- coding: utf-8 -*-
# Generated by Django 1.11.25 on 2020-03-31 19:54
from __future__ import unicode_literals

from django.db import migrations

dt_charter_pks = {
    'charter-ietf-acme': 734,
    'charter-ietf-doh': 770,
    'charter-ietf-dprive': 708,
    'charter-ietf-dispatch': 601,
    'charter-ietf-dnsop': 349,
    'charter-ietf-dmarc': 672,
    'charter-ietf-extra': 767,
    'charter-ietf-iasa2': 779,
    'charter-ietf-6man': 573,
    'charter-ietf-v6ops': 463,
    'charter-ietf-6lowpan': 517,
    'charter-ietf-6lo': 687,
    'charter-ietf-6tisch': 688,
    'charter-ietf-intarea': 540,
    'charter-ietf-jmap': 764,
    'charter-ietf-lsvr': 777,
    'charter-ietf-quic': 758,
    'charter-ietf-rift': 775,
    'charter-ietf-secdispatch': 778,
    'charter-ietf-tsvwg': 360,
}

snippets_charter_pks = {
    'charter-ietf-acme': 12,
    'charter-ietf-doh': 16,
    'charter-ietf-dprive': 11,
    'charter-ietf-dispatch': 7,
    'charter-ietf-dnsop': 1,
    'charter-ietf-dmarc': 8,
    'charter-ietf-extra': 15,
    'charter-ietf-iasa2': 20,
    'charter-ietf-6man': 6,
    'charter-ietf-v6ops': 3,
    'charter-ietf-6lowpan': 4,
    'charter-ietf-6lo': 9,
    'charter-ietf-6tisch': 10,
    'charter-ietf-intarea': 5,
    'charter-ietf-jmap': 14,
    'charter-ietf-lsvr': 18,
    'charter-ietf-quic': 13,
    'charter-ietf-rift': 17,
    'charter-ietf-secdispatch': 19,
    'charter-ietf-tsvwg': 2,
}

def forward(apps, schema_editor):

    Charter = apps.get_model('snippets','Charter')
    actual_snippets_pks = dict(Charter.objects.values_list('name','pk'))
    assert(snippets_charter_pks == actual_snippets_pks)
    assert(set(dt_charter_pks.values()).intersection(set(snippets_charter_pks.values())) == set())

    for charter, dt_charter_pk in dt_charter_pks.items():
        Charter.objects.filter(id=snippets_charter_pks[charter]).update(id=dt_charter_pk)

    actual_snippets_pks = dict(Charter.objects.values_list('name','pk'))
    assert(dt_charter_pks == actual_snippets_pks)


def reverse(apps, schema_editor):

    Charter = apps.get_model('snippets','Charter')
    actual_snippets_pks = dict(Charter.objects.values_list('charter','pk'))
    assert(dt_charter_pks == actual_snippets_pks)

    for charter, snippets_charter_pk in snippets_charter_pks.items():
        Charter.objects.filter(id=dt_charter_pks[charter]).update(id=snippets_charter_pk)

    actual_snippets_pks = dict(Charter.objects.values_list('charter','pk'))
    assert(snippets_charter_pks == actual_snippets_pks)

class Migration(migrations.Migration):

    dependencies = [
        ('snippets', '0042_restore_dt_pks_rfcs'),
    ]

    operations = [
        migrations.RunPython(forward,reverse)
    ]